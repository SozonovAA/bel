%% File : TMS320F28335.tlc
%% Created : Sun Jan 31 17:21:28 2021
%%
%% Description: 
%%   Simulink Coder wrapper functions interface generated for 
%%   S-function "TMS320F28335.c".
%%
%%         File generated by S-function Builder Block
%%
%%   For more information on using the Target Language with the 
%%   Simulink Coder, see the Target Language Compiler manual
%%   (under Simulink Coder) in the "Inlining S-Functions"
%%   chapter under the section and subsection:
%%     "Writing Block Target Files to Inline S-Functions",
%%        "Function-Based or Wrappered Code".
%%
%implements  TMS320F28335 "C"
%% Function: BlockTypeSetup ===================================================
%%
%% Purpose:
%%      Set up external references for wrapper functions in the 
%%      generated code.
%%
%function BlockTypeSetup(block, system) Output

  %if IsModelReferenceSimTarget() || CodeFormat == "S-Function" || ::isRAccel
    %assign hFileName = "TMS320F28335_accel_wrapper"
    %assign hFileNameMacro = FEVAL("upper", hFileName)
    %openfile hFile = "%<hFileName>.h"
    %selectfile hFile
    #ifndef _%<hFileNameMacro>_H_
    #define _%<hFileNameMacro>_H_

    #include "tmwtypes.h"
    #ifdef __cplusplus
    extern "C" {
    #endif
    extern void TMS320F28335_Outputs_wrapper_accel(const real_T *Lpars,
			const real_T *Rpars,
			const real_T *FromKabine,
			real_T *PWM,
			void *Out, void *__OutBUS);
    #ifdef __cplusplus
    }
    #endif
    #endif
    %closefile hFile

    %assign cFileName = "TMS320F28335_accel_wrapper"
    %openfile cFile = "%<cFileName>.c"
    %selectfile cFile
    #include <string.h>
    #include "tmwtypes.h"
    #include "TMS320F28335_bus.h"

    void TMS320F28335_Outputs_wrapper_accel(const real_T *Lpars,
			const real_T *Rpars,
			const real_T *FromKabine,
			real_T *PWM,
			void *Out, void *__OutBUS){
    TMS320F28335_Outputs_wrapper(Lpars,
			Rpars,
			FromKabine,
			PWM,
			(DebugInfL *) __OutBUS);

    %assign dTypeId = LibBlockOutputSignalDataTypeId(1)
    %<SLibAssignUserStructToSLStruct(dTypeId, "(char *) Out", "(*(DebugInfL *) __OutBUS)", 1)>
    }

    %closefile cFile

    %<LibAddToCommonIncludes("%<hFileName>.h")>
    %<LibAddToModelSources("%<cFileName>")>

  %else
  %openfile externs

    #ifdef __cplusplus
    extern "C" {
    #endif

    extern void TMS320F28335_Start_wrapper(void);

    extern void TMS320F28335_Outputs_wrapper(const real_T *Lpars,
			const real_T *Rpars,
			const real_T *FromKabine,
			real_T *PWM,
			DebugInfL *Out);

    extern void TMS320F28335_Terminate_wrapper(void);

    #ifdef __cplusplus
    }
    #endif
  %closefile externs
  %<LibCacheExtern(externs)>

  %endif
  %%
%endfunction


%% Function: Outputs ==========================================================
%%
%% Purpose:
%%      Code generation rules for mdlOutputs function.
%%
%function Outputs(block, system) Output
  %%
  %assign pu0 = LibBlockInputSignalAddr(0, "", "", 0)
  %assign pu1 = LibBlockInputSignalAddr(1, "", "", 0)
  %assign pu2 = LibBlockInputSignalAddr(2, "", "", 0)
  %assign py0 = LibBlockOutputSignalAddr(0, "", "", 0)
  %assign py1 = LibBlockOutputSignalAddr(1, "", "", 0)
  
  %if IsModelReferenceSimTarget() || CodeFormat == "S-Function" || ::isRAccel
    %assign OutBUS_ptr = LibBlockDWorkAddr(OutBUS, "", "", 0)
    TMS320F28335_Outputs_wrapper_accel(%<pu0>, %<pu1>, %<pu2>, %<py0>, %<py1>, %<OutBUS_ptr>);
  %else
    TMS320F28335_Outputs_wrapper(%<pu0>, %<pu1>, %<pu2>, %<py0>, %<py1>);
  %endif

  %%
%endfunction


%% [EOF] TMS320F28335.tlc

